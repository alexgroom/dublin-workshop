apiVersion: 1.0.0
metadata:
  name: wksp-cloud-native
projects:
  - name: workshop
    source:
      location: 'https://github.com/alexgroom/dublin-workshop.git'
      type: git
      branch: master
components:
  - type: dockerimage
    alias: maven
    image: 'quay.io/eclipse/che-java11-maven:7.4.0'
    memoryLimit: 256Mi
    mountSources: true
    endpoints:
      - name: localhost-8080
        port: 8080
      - name: localhost-9000
        port: 9000
  - id: redhat/workshop-tools/3.0
    type: chePlugin
    alias: workshop-tools
commands:
  - name: 'OpenShift - Login'
    actions:
      - type: exec
        command: >-
          oc login --server=$(oc whoami --show-server) -u
          ${CHE_WORKSPACE_NAMESPACE}  -p 'openshift' --insecure-skip-tls-verify
          &&  oc project cn-project${CHE_WORKSPACE_NAMESPACE#user}
        component: workshop-tools
  - name: 'Inventory - Compile (Dev Mode)'
    actions:
      - workdir: /projects/workshop/labs/inventory-quarkus
        type: exec
        command: 'mvn compile quarkus:dev'
        component: workshop-tools
  - name: 'Inventory - Build on OpenShift'
    actions:
      - workdir: /projects/workshop/labs/inventory-quarkus
        type: exec
        command: >-
          mvn clean package -DskipTests &&
          oc start-build inventory --from-file=target/inventory-quarkus-1.0.0-SNAPSHOT-runner.jar --follow
        component: workshop-tools
  - name: 'Inventory - Deploy on OpenShift'
    actions:
      - workdir: /projects/workshop/labs/inventory-quarkus
        type: exec
        command: >-
          mvn clean package -DskipTests && 
          oc new-build --name=inventory java --binary=true --labels=app.kubernetes.io/instance=inventory && 
          oc start-build inventory --from-file=target/inventory-quarkus-1.0.0-SNAPSHOT-runner.jar --follow && 
          oc new-app inventory &&  
          oc label dc/inventory app.kubernetes.io/part-of=coolstore app.kubernetes.io/name=java app.kubernetes.io/instance=inventory && 
          oc expose svc inventory
        component: workshop-tools
  - name: 'Catalog - Build'
    actions:
      - workdir: /projects/workshop/labs/catalog-spring-boot
        type: exec
        command: mvn clean package -DskipTests
        component: workshop-tools
  - name: 'Catalog - Run'
    actions:
      - workdir: /projects/workshop/labs/catalog-spring-boot
        type: exec
        command: mvn spring-boot:run
        component: workshop-tools
  - name: 'Catalog - Deploy on OpenShift'
    actions:
      - workdir: /projects/workshop/labs/catalog-spring-boot
        type: exec
        command: >- 
          mvn clean fabric8:deploy &&
          oc label bc/catalog-s2i app.kubernetes.io/instance=catalog
        component: workshop-tools
  - name: 'Gateway - Build'
    actions:
      - workdir: /projects/workshop/labs/gateway-vertx
        type: exec
        command: 'mvn clean package -DskipTests'
        component: workshop-tools
  - name: 'Gateway - Deploy on OpenShift'
    actions:
      - workdir: /projects/workshop/labs/gateway-vertx
        type: exec
        command: >- 
          mvn clean fabric8:deploy &&
          oc label bc/gateway-s2i app.kubernetes.io/instance=gateway &&
          oc annotate dc/gateway "app.openshift.io/connects-to"="inventory,catalog"
        component: workshop-tools
  - name: 'Gateway - Generate Traffic'
    actions:
      - workdir: /projects/workshop/labs/scripts
        type: exec
        command: ./runGatewayService.sh cn-project${CHE_WORKSPACE_NAMESPACE#user}
        component: workshop-tools
  - name: 'Pipeline - Start Mine'
    actions:
      - type: exec
        command: >-
          echo "------ START ------" &&
          tkn pipeline start my-pipeline --resource app-git=inventory-git --param appName=inventory --serviceaccount pipeline &&
          echo "------  END  ------"
        component: workshop-tools
  - name: 'Pipeline - Start Full'
    actions:
      - type: exec
        command: >-
          echo "------ START ------" &&
          tkn pipeline start application-pipeline --resource app-git=inventory-git --param appName=inventory --serviceaccount pipeline &&
          echo "------  END  ------"
        component: workshop-tools
  - name: 'Service Mesh - Deploy'
    actions:
      - type: exec
        command: >-
          oc patch dc/inventory --patch '{"spec": {"template": {"metadata": {"annotations": {"sidecar.istio.io/inject": "true"}}}}}' &&
          oc patch dc/inventory --patch '{"spec": {"template": {"spec": {"containers": [{"name": "inventory", "command" : ["/bin/bash"], "args": ["-c", "until $(curl -o /dev/null -s -I -f http://127.0.0.1:15000); do echo \"Waiting for Istio Sidecar...\"; sleep 1; done; sleep 10; /usr/local/s2i/run"]}]}}}}' &&
          oc rollout latest dc/inventory &&
          oc rollout pause dc/gateway &&
          oc patch dc/gateway --patch '{"spec": {"template": {"metadata": {"annotations": {"sidecar.istio.io/inject": "true"}}}}}' &&
          oc patch dc/gateway --patch '{"spec": {"template": {"spec": {"containers": [{"name": "vertx", "command" : ["/bin/bash"], "args": ["-c", "until $(curl -o /dev/null -s -I -f http://127.0.0.1:15000); do echo \"Waiting for Istio Sidecar...\"; sleep 1; done; sleep 10; /usr/local/s2i/run"]}]}}}}' &&
          oc rollout resume dc/gateway
        component: workshop-tools
  
